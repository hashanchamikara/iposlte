/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.isimple.intelijpos_lite.ui.product;

import com.isimple.intelijpos_lite.controller.ItemManager;
import com.isimple.intelijpos_lite.controller.PurchaseManager;
import com.isimple.intelijpos_lite.models.Item;
import com.isimple.intelijpos_lite.models.Stock;
import com.isimple.intelijpos_lite.util.Const;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.event.MenuKeyEvent;
import javax.swing.event.MenuKeyListener;

/**
 *
 * @author Hashan Chamikara
 */
public class UIProductAdd extends javax.swing.JDialog {

    /**
     * Creates new form UIProductAdd
     *
     * @param parent
     */
    public UIProductAdd(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(parent);
        jPopupMenu1.setLightWeightPopupEnabled(true);
        resetAll();
    }
    
    public UIProductAdd(java.awt.Frame parent, Item item) {
        super(parent, true);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(parent);
        jPopupMenu1.setLightWeightPopupEnabled(true);
//        resetAll();
        mBarcode.setText(item.getBarcode());
        mReference.setText(item.getReference());
        mCategory.setText(item.getCategory());
        mName.setText(item.getName());
        mUnit.setText(item.getUnit());
        mWarranty.setSelected(Boolean.parseBoolean(String.valueOf(item.getWarranty())));
        mExpireItem.setSelected(Boolean.parseBoolean(String.valueOf(item.getWarranty())));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        mBarcode = new javax.swing.JTextField();
        mName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        mSave = new javax.swing.JButton();
        mSaveAndNew = new javax.swing.JButton();
        mCost = new javax.swing.JFormattedTextField();
        mWholesale = new javax.swing.JFormattedTextField();
        mRetail = new javax.swing.JFormattedTextField();
        mStockInHand = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        mWholesaleMargin = new javax.swing.JLabel();
        mRetailMargin = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mDescription = new javax.swing.JTextArea();
        mExpireItem = new javax.swing.JCheckBox();
        mCategory = new javax.swing.JTextField();
        mUnit = new javax.swing.JTextField();
        mReference = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        mWarranty = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("New Product Register");

        jLabel2.setText("Barcode");

        jLabel3.setText("Product Name");

        jLabel4.setText("Cost");

        jLabel5.setText("Wholesale");

        jLabel6.setText("Retail");

        mBarcode.setEditable(false);

        jLabel7.setText("Stock in hand");

        mSave.setText("Save");
        mSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSaveActionPerformed(evt);
            }
        });

        mSaveAndNew.setText("Save & New");
        mSaveAndNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSaveAndNewActionPerformed(evt);
            }
        });

        mCost.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        mCost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        mWholesale.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        mWholesale.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        mWholesale.setEnabled(false);
        mWholesale.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                mWholesaleFocusLost(evt);
            }
        });
        mWholesale.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                mWholesaleCaretPositionChanged(evt);
            }
        });
        mWholesale.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mWholesaleKeyReleased(evt);
            }
        });

        mRetail.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        mRetail.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        mRetail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mRetailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mRetailFocusLost(evt);
            }
        });

        mStockInHand.setEditable(false);
        mStockInHand.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        mStockInHand.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        mStockInHand.setText("0");
        mStockInHand.setEnabled(false);
        mStockInHand.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mStockInHandFocusGained(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("margins");

        mWholesaleMargin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        mWholesaleMargin.setText("0.00");

        mRetailMargin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        mRetailMargin.setText("0.00");

        jLabel11.setText("Category");

        jLabel12.setText("Unit");

        jLabel13.setText("Remarks");

        mDescription.setColumns(20);
        mDescription.setLineWrap(true);
        mDescription.setRows(5);
        mDescription.setTabSize(4);
        mDescription.setFocusable(false);
        mDescription.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(mDescription);

        mExpireItem.setText("Expire item");

        mCategory.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mCategoryFocusGained(evt);
            }
        });
        mCategory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mCategoryKeyReleased(evt);
            }
        });

        mUnit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mUnitFocusGained(evt);
            }
        });
        mUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mUnitKeyReleased(evt);
            }
        });

        mReference.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mReferenceFocusGained(evt);
            }
        });

        jLabel9.setText("Reference");

        mWarranty.setText("Warranty");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(mSave, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(mSaveAndNew))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel9))
                                    .addGap(36, 36, 36))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(44, 44, 44)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(mName, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                                .addComponent(mBarcode)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(mStockInHand, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mRetail, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mWholesale, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mCost, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(mWholesaleMargin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(mRetailMargin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(mReference))
                            .addGap(27, 27, 27)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                .addComponent(mCategory, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(mUnit, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(mExpireItem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(mWarranty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {mSave, mSaveAndNew});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(mBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(mCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel12)
                            .addComponent(mUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(mReference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(mName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(mCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(mWholesale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mWholesaleMargin))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(mRetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mRetailMargin))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(mStockInHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mExpireItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mWarranty)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mSaveAndNew))))
                .addGap(24, 24, 24))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {mSave, mSaveAndNew});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSaveActionPerformed
        saveItem(Const.SAVE_ONLY);
    }//GEN-LAST:event_mSaveActionPerformed

    private void mSaveAndNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSaveAndNewActionPerformed
        saveItem(Const.SAVE_AND_NEW);
    }//GEN-LAST:event_mSaveAndNewActionPerformed

    private void mCategoryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mCategoryKeyReleased
        findCategory(evt);
    }//GEN-LAST:event_mCategoryKeyReleased

    private void mUnitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mUnitKeyReleased
        findUnits(evt);
    }//GEN-LAST:event_mUnitKeyReleased

    private void mWholesaleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mWholesaleKeyReleased
        mWholesaleMargin.setText(String.valueOf((Double.parseDouble(
                mWholesale.getValue() != null ? mWholesale.getValue().toString() : "0"))
                - (Double.parseDouble(mCost.getValue() != null ? mCost.getValue().toString() : "0"))));
    }//GEN-LAST:event_mWholesaleKeyReleased

    private void mWholesaleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mWholesaleFocusLost
        mWholesaleMargin.setText(String.valueOf((Double.parseDouble(
                mWholesale.getValue() != null ? mWholesale.getValue().toString() : "0"))
                - (Double.parseDouble(mCost.getValue() != null ? mCost.getValue().toString() : "0"))));
    }//GEN-LAST:event_mWholesaleFocusLost

    private void mWholesaleCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_mWholesaleCaretPositionChanged

    }//GEN-LAST:event_mWholesaleCaretPositionChanged

    private void mRetailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mRetailFocusGained
        mWholesaleMargin.setText(String.valueOf((Double.parseDouble(
                mWholesale.getValue() != null ? mWholesale.getValue().toString() : "0"))
                - (Double.parseDouble(mCost.getValue() != null ? mCost.getValue().toString() : "0"))));
    }//GEN-LAST:event_mRetailFocusGained

    private void mRetailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mRetailFocusLost
        mRetailMargin.setText(String.valueOf((Double.parseDouble(
                mRetail.getValue() != null ? mRetail.getValue().toString() : "0"))
                - (Double.parseDouble(mCost.getValue() != null ? mCost.getValue().toString() : "0"))));
    }//GEN-LAST:event_mRetailFocusLost

    private void mCategoryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mCategoryFocusGained
        mCategory.selectAll();
    }//GEN-LAST:event_mCategoryFocusGained

    private void mUnitFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mUnitFocusGained
        mUnit.selectAll();
    }//GEN-LAST:event_mUnitFocusGained

    private void mStockInHandFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mStockInHandFocusGained
        mRetailMargin.setText(String.valueOf((Double.parseDouble(
                mRetail.getValue() != null ? mRetail.getValue().toString() : "0"))
                - (Double.parseDouble(mCost.getValue() != null ? mCost.getValue().toString() : "0"))));
        mStockInHand.selectAll();
    }//GEN-LAST:event_mStockInHandFocusGained

    private void mReferenceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mReferenceFocusGained
        mReference.selectAll();
    }//GEN-LAST:event_mReferenceFocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mBarcode;
    private javax.swing.JTextField mCategory;
    private javax.swing.JFormattedTextField mCost;
    private javax.swing.JTextArea mDescription;
    private javax.swing.JCheckBox mExpireItem;
    private javax.swing.JTextField mName;
    private javax.swing.JTextField mReference;
    private javax.swing.JFormattedTextField mRetail;
    private javax.swing.JLabel mRetailMargin;
    private javax.swing.JButton mSave;
    private javax.swing.JButton mSaveAndNew;
    private javax.swing.JFormattedTextField mStockInHand;
    private javax.swing.JTextField mUnit;
    private javax.swing.JCheckBox mWarranty;
    private javax.swing.JFormattedTextField mWholesale;
    private javax.swing.JLabel mWholesaleMargin;
    // End of variables declaration//GEN-END:variables

    private void saveItem(int type) {
        if (formValidate()) {
            try {
                Item item = new Item();
                item.setBarcode(mBarcode.getText().trim().toUpperCase());
                item.setReference(mReference.getText().trim().toUpperCase());
                item.setCategory(mCategory.getText().trim().toUpperCase());
                item.setCreated(new Date());
                item.setWarranty(mWarranty.isSelected() ? 1 : 0);
                item.setExpire(mExpireItem.isSelected() ? 1 : 0);
                item.setModify(new Date());
                item.setName(mName.getText().trim());
                item.setStatus(Const.ITEM_ACTIVE);
                item.setUnit(mUnit.getText());
                item.setUnitDescription(mDescription.getText().trim());

                Stock stock = new Stock();
                stock.setCost(Double.valueOf(mCost.getValue().toString()));
                stock.setCreated(new Date());
                stock.setItem(item);
                stock.setModify(new Date());
//                stock.setQty(Integer.parseInt(mStockInHand.getValue().toString()));
                stock.setQty(1);
                stock.setRprice(Double.parseDouble(mRetail.getValue().toString()));
                stock.setStatus(Const.STOCK_ACTIVE);
                stock.setWprice(Double.parseDouble(mWholesale.getValue().toString()));

                if (ItemManager.getInstance().saveItem(item, stock)) {
                    JOptionPane.showMessageDialog(this, "Success", "Message", JOptionPane.INFORMATION_MESSAGE);
                    switch (type) {
                        case Const.SAVE_ONLY:
                            this.dispose();
                            break;
                        case Const.SAVE_AND_NEW:
                            resetAll();
                            break;
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Fail", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Exception", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private boolean formValidate() {
        return !(mBarcode.getText().isEmpty() || mReference.getText().isEmpty() || mName.getText().isEmpty()
                || mCost.getText().isEmpty() || mWholesale.getText().isEmpty()
                || mRetail.getText().isEmpty());
    }

    private void resetAll() {
        String productNumber = PurchaseManager.getInstance().getGenerateProductNumber();
        mBarcode.setText(productNumber);
        mReference.setText(productNumber);
        mName.setText("");
        mCategory.setText("");
        mCost.setText("");
        mDescription.setText("");
        mExpireItem.setSelected(false);
        mRetail.setText("");
        mStockInHand.setText("");
        mUnit.setText("");
        mWholesale.setText("");
        mName.requestFocus();
    }

    private void findCategory(KeyEvent evt) {
        if (KeyEvent.VK_UP != evt.getKeyCode() && KeyEvent.VK_DOWN != evt.getKeyCode()
                && KeyEvent.VK_ENTER != evt.getKeyCode()) {
            if (!mCategory.getText().isEmpty()) {
                jPopupMenu1.removeAll();
                List<String> categories = PurchaseManager.getInstance().getCategories(mCategory.getText());
                for (String category : categories) {
                    JMenuItem menuItem = jPopupMenu1.add(category);
                    menuItem.addActionListener((ActionEvent e) -> {
                        mCategory.setText(category);
                    });
                    menuItem.addMenuKeyListener(new MenuKeyListener() {

                        @Override
                        public void menuKeyTyped(MenuKeyEvent e) {

                        }

                        @Override
                        public void menuKeyPressed(MenuKeyEvent e) {
                        }

                        @Override
                        public void menuKeyReleased(MenuKeyEvent e) {
                            if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                                mCategory.setText(category);
                                jPopupMenu1.setVisible(false);
                            }
                        }
                    });
                }
                jPopupMenu1.show(mCategory, 0, 20);
                jPopupMenu1.pack();
                mCategory.requestFocus();
            }
        } else {
            jPopupMenu1.requestFocus();
        }
    }

    private void findUnits(KeyEvent evt) {
        if (KeyEvent.VK_UP != evt.getKeyCode() && KeyEvent.VK_DOWN != evt.getKeyCode()
                && KeyEvent.VK_ENTER != evt.getKeyCode()) {
            if (!mUnit.getText().isEmpty()) {
                jPopupMenu2.removeAll();
                List<String> categories = PurchaseManager.getInstance().getUnits(mUnit.getText());
                for (String category : categories) {
                    JMenuItem menuItem = jPopupMenu2.add(category);
                    menuItem.addActionListener((ActionEvent e) -> {
                        mUnit.setText(category);
                    });
                    menuItem.addMenuKeyListener(new MenuKeyListener() {

                        @Override
                        public void menuKeyTyped(MenuKeyEvent e) {

                        }

                        @Override
                        public void menuKeyPressed(MenuKeyEvent e) {
                        }

                        @Override
                        public void menuKeyReleased(MenuKeyEvent e) {
                            if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                                mUnit.setText(category);
                                jPopupMenu2.setVisible(false);
                            }
                        }
                    });
                }
                jPopupMenu2.show(mUnit, 0, 20);
                jPopupMenu2.pack();
                mUnit.requestFocus();
            }
        } else {
            jPopupMenu2.requestFocus();
        }
    }

}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.isimple.intelijpos_lite.ui.grn;

import com.isimple.intelijpos_lite.controller.PurchaseManager;
import com.isimple.intelijpos_lite.controller.ItemManager;
import com.isimple.intelijpos_lite.models.Grn;
import com.isimple.intelijpos_lite.models.Item;
import com.isimple.intelijpos_lite.models.Stock;
import com.isimple.intelijpos_lite.models.Supplier;
import com.isimple.intelijpos_lite.ui.main.UIHome;
import com.isimple.intelijpos_lite.util.Const;
import com.isimple.intelijpos_lite.util.Utilities;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.event.MenuKeyEvent;
import javax.swing.event.MenuKeyListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dumidu
 */
public class UIGrn extends javax.swing.JPanel {

    private final UIHome home;
    private Supplier mSupplier = null;
    private final Map<Item, Stock> mITEMS;

    /**
     * Creates new form UIGrn
     *
     * @param home
     */
    public UIGrn(UIHome home) {
        initComponents();
        this.home = home;
        jPopupMenu1.setLightWeightPopupEnabled(true);
        jPopupMenu2.setLightWeightPopupEnabled(true);
        mITEMS = new HashMap<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        mSupplierAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mAddress = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        mSupplierTelephone = new javax.swing.JTextField();
        mSupplierName = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        mUpdatePrice = new javax.swing.JRadioButton();
        mNewPrice = new javax.swing.JRadioButton();
        mGrnDate = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        mGrnValue = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        mItemName = new javax.swing.JTextField();
        mItemCode = new javax.swing.JTextField();
        mQty = new javax.swing.JFormattedTextField();
        mItemAdd = new javax.swing.JButton();
        mCost = new javax.swing.JFormattedTextField();
        mWholeSale = new javax.swing.JFormattedTextField();
        mRetail = new javax.swing.JFormattedTextField();
        mExpireDate = new com.toedter.calendar.JDateChooser();
        mCategory = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mGrnDetails = new javax.swing.JTable();
        mSave = new javax.swing.JButton();
        mSaveAndExit = new javax.swing.JButton();
        mReset = new javax.swing.JButton();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Supplier Details"));

        jLabel1.setText("Supplier");

        mSupplierAdd.setText("+");
        mSupplierAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSupplierAddActionPerformed(evt);
            }
        });

        mAddress.setEditable(false);
        mAddress.setColumns(20);
        mAddress.setRows(5);
        mAddress.setEnabled(false);
        jScrollPane1.setViewportView(mAddress);

        jLabel2.setText("Telephone");

        mSupplierTelephone.setEnabled(false);

        mSupplierName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mSupplierNameKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mSupplierTelephone)
                    .addComponent(mSupplierName, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mSupplierAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(mSupplierAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(mSupplierTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(mSupplierName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("GRN Details"));

        jLabel3.setText("Date");

        buttonGroup1.add(mUpdatePrice);
        mUpdatePrice.setSelected(true);
        mUpdatePrice.setText("Update Prices");

        buttonGroup1.add(mNewPrice);
        mNewPrice.setText("New Prices");

        mGrnDate.setDate(new java.util.Date());

        jLabel11.setText("Value");

        mGrnValue.setEditable(false);
        mGrnValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        mGrnValue.setText("0.0");
        mGrnValue.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(mUpdatePrice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mNewPrice))
                            .addComponent(mGrnDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mGrnValue)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(mGrnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mNewPrice)
                    .addComponent(mUpdatePrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(mGrnValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        mItemName.setBorder(javax.swing.BorderFactory.createTitledBorder("Item"));
        mItemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemNameActionPerformed(evt);
            }
        });
        mItemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mItemNameKeyReleased(evt);
            }
        });

        mItemCode.setBorder(javax.swing.BorderFactory.createTitledBorder("Barcode"));

        mQty.setBorder(javax.swing.BorderFactory.createTitledBorder("Quantity"));
        mQty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        mItemAdd.setText("Add");
        mItemAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemAddActionPerformed(evt);
            }
        });

        mCost.setBorder(javax.swing.BorderFactory.createTitledBorder("Cost"));
        mCost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        mWholeSale.setBorder(javax.swing.BorderFactory.createTitledBorder("Wholesale"));
        mWholeSale.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        mRetail.setBorder(javax.swing.BorderFactory.createTitledBorder("Retail"));
        mRetail.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        mExpireDate.setBorder(javax.swing.BorderFactory.createTitledBorder("Expire Date"));
        mExpireDate.setDate(new java.util.Date());

        mCategory.setBorder(javax.swing.BorderFactory.createTitledBorder("Category"));

        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(mItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(mItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mQty)
                    .addComponent(mCost, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(mRetail, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mItemAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(mWholeSale)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mExpireDate, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {mExpireDate, mItemAdd, mRetail, mWholeSale});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(mExpireDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mWholeSale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(mItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mRetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mItemAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        mGrnDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barcode", "Item", "Exp", "Qty", "Cost", "Wholesale", "Retail", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mGrnDetails.setRowHeight(30);
        jScrollPane2.setViewportView(mGrnDetails);
        if (mGrnDetails.getColumnModel().getColumnCount() > 0) {
            mGrnDetails.getColumnModel().getColumn(0).setPreferredWidth(100);
            mGrnDetails.getColumnModel().getColumn(1).setPreferredWidth(500);
            mGrnDetails.getColumnModel().getColumn(2).setPreferredWidth(100);
            mGrnDetails.getColumnModel().getColumn(3).setPreferredWidth(50);
            mGrnDetails.getColumnModel().getColumn(4).setPreferredWidth(100);
            mGrnDetails.getColumnModel().getColumn(5).setPreferredWidth(100);
            mGrnDetails.getColumnModel().getColumn(6).setPreferredWidth(100);
            mGrnDetails.getColumnModel().getColumn(7).setPreferredWidth(150);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                .addContainerGap())
        );

        mSave.setText("Save");
        mSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSaveActionPerformed(evt);
            }
        });

        mSaveAndExit.setText("Save & New");

        mReset.setText("Reset");
        mReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(mReset, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mSave, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mSaveAndExit)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {mReset, mSave, mSaveAndExit});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mSaveAndExit)
                    .addComponent(mSave)
                    .addComponent(mReset))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {mReset, mSave, mSaveAndExit});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mItemNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mItemNameKeyReleased
        findItem(evt);
    }//GEN-LAST:event_mItemNameKeyReleased

    private void mSupplierNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mSupplierNameKeyReleased
        findSupplier(evt);
    }//GEN-LAST:event_mSupplierNameKeyReleased

    private void mSupplierAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSupplierAddActionPerformed
        home.openNewSupplier();
    }//GEN-LAST:event_mSupplierAddActionPerformed

    private void mItemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mItemNameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        home.openNewProduct();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void mItemAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemAddActionPerformed
        addItemToTable();
    }//GEN-LAST:event_mItemAddActionPerformed

    private void mSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSaveActionPerformed
        saveGrn();
    }//GEN-LAST:event_mSaveActionPerformed

    private void mResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mResetActionPerformed
        resetAll();
    }//GEN-LAST:event_mResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea mAddress;
    private javax.swing.JTextField mCategory;
    private javax.swing.JFormattedTextField mCost;
    private com.toedter.calendar.JDateChooser mExpireDate;
    private com.toedter.calendar.JDateChooser mGrnDate;
    private javax.swing.JTable mGrnDetails;
    private javax.swing.JFormattedTextField mGrnValue;
    private javax.swing.JButton mItemAdd;
    private javax.swing.JTextField mItemCode;
    private javax.swing.JTextField mItemName;
    private javax.swing.JRadioButton mNewPrice;
    private javax.swing.JFormattedTextField mQty;
    private javax.swing.JButton mReset;
    private javax.swing.JFormattedTextField mRetail;
    private javax.swing.JButton mSave;
    private javax.swing.JButton mSaveAndExit;
    private javax.swing.JButton mSupplierAdd;
    private javax.swing.JTextField mSupplierName;
    private javax.swing.JTextField mSupplierTelephone;
    private javax.swing.JRadioButton mUpdatePrice;
    private javax.swing.JFormattedTextField mWholeSale;
    // End of variables declaration//GEN-END:variables

    private void setSuplier(Supplier supplier) {
        this.mSupplier = supplier;
    } 

    private void findItem(java.awt.event.KeyEvent evt) {
        if (KeyEvent.VK_UP != evt.getKeyCode() && KeyEvent.VK_DOWN != evt.getKeyCode()
                && KeyEvent.VK_ENTER != evt.getKeyCode()) {
            if (!mItemName.getText().isEmpty()) {
                jPopupMenu1.removeAll();
                List<Item> items = ItemManager.getInstance().searchItemName(mItemName.getText());
                for (Item item : items) {
                    JMenuItem menuItem = jPopupMenu1.add(item.getName());
                    menuItem.addActionListener((ActionEvent e) -> {
                        mItemName.setText(item.getName());
                        mItemCode.setText(item.getBarcode());
                        mExpireDate.setEnabled(item.getExpire() == 1);
                        mCategory.setText(item.getCategory());
                        List<Stock> stocks = ItemManager.getInstance().getStocks(item);
                        if (!stocks.isEmpty()) {
                            Stock stock = stocks.get(stocks.size() - 1);
                            mCost.setText(String.valueOf(stock.getCost()));
                            mWholeSale.setText(String.valueOf(stock.getWprice()));
                            mRetail.setText(String.valueOf(stock.getRprice()));
                        }
                    });
                    menuItem.addMenuKeyListener(new MenuKeyListener() {

                        @Override
                        public void menuKeyTyped(MenuKeyEvent e) {

                        }

                        @Override
                        public void menuKeyPressed(MenuKeyEvent e) {
                        }

                        @Override
                        public void menuKeyReleased(MenuKeyEvent e) {
                            if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                                mItemName.setText(item.getName());
                                mItemCode.setText(item.getBarcode());
                                mExpireDate.setEnabled(item.getExpire() == 1);
                                mCategory.setText(item.getCategory());
                                List<Stock> stocks = ItemManager.getInstance().getStocks(item);;
                                if (!stocks.isEmpty()) {
                                    Stock stock = stocks.get(stocks.size() - 1);
                                    mCost.setText(String.valueOf(stock.getCost()));
                                    mWholeSale.setText(String.valueOf(stock.getWprice()));
                                    mRetail.setText(String.valueOf(stock.getRprice()));
                                }
                                jPopupMenu1.setVisible(false);
                            }
                        }
                    });
                }
                jPopupMenu1.show(mItemName, 0, 20);
                jPopupMenu1.pack();
                mItemName.requestFocus();
            }
        } else {
            jPopupMenu1.requestFocus();
        }
    }

    private void findSupplier(KeyEvent evt) {
        if (KeyEvent.VK_UP != evt.getKeyCode() && KeyEvent.VK_DOWN != evt.getKeyCode()
                && KeyEvent.VK_ENTER != evt.getKeyCode()) {
            if (!mSupplierName.getText().isEmpty()) {
                jPopupMenu2.removeAll();
                List<Supplier> suppliers = PurchaseManager.getInstance().searchSupplier(mSupplierName.getText());
                for (Supplier supplier : suppliers) {
                    JMenuItem menuItem = jPopupMenu2.add(supplier.getName());
                    menuItem.addActionListener((ActionEvent e) -> {
                        mSupplierName.setText(supplier.getName());
                        mAddress.setText(supplier.getAddress());
                        mSupplierTelephone.setText(supplier.getTelephone());
                        setSuplier(supplier);
                    });
                    menuItem.addMenuKeyListener(new MenuKeyListener() {

                        @Override
                        public void menuKeyTyped(MenuKeyEvent e) {

                        }

                        @Override
                        public void menuKeyPressed(MenuKeyEvent e) {
                        }

                        @Override
                        public void menuKeyReleased(MenuKeyEvent e) {
                            if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                                mSupplierName.setText(supplier.getName());
                                mAddress.setText(supplier.getAddress());
                                mSupplierTelephone.setText(supplier.getTelephone());
                                setSuplier(supplier);
                                jPopupMenu2.setVisible(false);
                            }
                        }
                    });
                }
                jPopupMenu2.show(mSupplierName, 0, 20);
                jPopupMenu2.pack();
                mSupplierName.requestFocus();
            }
        } else {
            jPopupMenu2.requestFocus();
        }
    }

    private void addItemToTable() {
        try {

            Item item = ItemManager.getInstance().getItemByBarcode(mItemCode.getText());
            if (item != null) {
                Stock stock = new Stock();
                stock.setCost(Double.parseDouble(mCost.getText()));
                stock.setCreated(new Date());
                if (item.getExpire() == Const.ITEM_EXPIRE) {
                    stock.setExpire(mExpireDate.getDate());
                }
                stock.setItem(item);
                stock.setModify(new Date());
                stock.setQty(Integer.parseInt(mQty.getText()));
                stock.setRprice(Double.parseDouble(mRetail.getText()));
                stock.setStatus(Const.STOCK_ACTIVE);
                stock.setWprice(Double.parseDouble(mWholeSale.getText()));
                mITEMS.put(item, stock);
            }

            DefaultTableModel model = (DefaultTableModel) mGrnDetails.getModel();
            Vector<Object> vector = new Vector<>();
            vector.add(mItemCode.getText());
            vector.add(mItemName.getText());
            vector.add(mExpireDate.isEnabled() ? mExpireDate.getDate() : null);
            vector.add(Double.parseDouble(mQty.getText()));
            vector.add(Double.parseDouble(mCost.getText()));
            vector.add(Double.parseDouble(mWholeSale.getText()));
            vector.add(Double.parseDouble(mRetail.getText()));
            vector.add(Double.parseDouble(mCost.getText()) * Double.parseDouble(mQty.getText()));
            model.addRow(vector);
            clearItem();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Exception", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void clearItem() {
        mItemName.setText("");
        mItemCode.setText("");
        mCategory.setText("");
        mQty.setText("");
        mCost.setText("");
        mRetail.setText("");
        mWholeSale.setText("");
        mExpireDate.setDate(new Date());
        mExpireDate.setEnabled(true);
    }

    private void saveGrn() {
        if (validateForm()) {
            try {
                Grn grn = new Grn();
                grn.setCreated(new Date());
                grn.setDate(mGrnDate.getDate());
                grn.setModify(new Date());
                grn.setStatus(Const.GRN_ACTIVE);
                grn.setSupplier(mSupplier);
                grn.setValue(Double.parseDouble(mGrnValue.getText()));
                if (PurchaseManager.getInstance()
                        .saveGRN(grn,
                                mITEMS,
                                mUpdatePrice.isSelected() ? Const.TYPE_UPDATE : Const.TYPE_NEW)) {
                    
                    JOptionPane.showMessageDialog(this, "Success", "Message", JOptionPane.INFORMATION_MESSAGE);
                    resetAll();
                } else {
                    JOptionPane.showMessageDialog(this, "Fail", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Exception", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private boolean validateForm() {
        if (mSupplier == null || mGrnDate.getDate() == null
                || mGrnValue.getText().isEmpty() || mGrnDetails.getRowCount() <= 0) {
            return false;
        }
        return true;

    }

    private void resetAll() {
        mAddress.setText("");
        mCategory.setText("");
        mCost.setText("");
        Utilities.clear(mGrnDetails);
        mGrnValue.setText("0.00");
        mITEMS.clear();
        mItemCode.setText("");
        mItemName.setText("");
        mQty.setText("");
        mRetail.setText("");
        mSupplier = null;
        mSupplierName.setText("");
        mSupplierTelephone.setText("");
        mUpdatePrice.setSelected(true);
        mWholeSale.setText("");
    }
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.isimple.intelijpos_lite.ui.sale;

import com.isimple.intelijpos_lite.controller.ItemManager;
import com.isimple.intelijpos_lite.controller.ReportManager;
import com.isimple.intelijpos_lite.controller.SalesManager;
import com.isimple.intelijpos_lite.hw.LineDisplay;
import com.isimple.intelijpos_lite.models.Invoice;
import com.isimple.intelijpos_lite.models.InvoiceDetail;
import com.isimple.intelijpos_lite.models.Item;
import com.isimple.intelijpos_lite.models.Receipt;
import com.isimple.intelijpos_lite.models.Stock;
import com.isimple.intelijpos_lite.models.User;
import com.isimple.intelijpos_lite.ui.main.UIHome;
import com.isimple.intelijpos_lite.ui.product.UIProductSearch;
import com.isimple.intelijpos_lite.ui.sale.sub.UIPaymentInfo;
import com.isimple.intelijpos_lite.ui.sale.sub.UIWarranty;
import com.isimple.intelijpos_lite.util.Const;
import com.isimple.intelijpos_lite.util.Utilities;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dumidu
 */
public class UISale extends javax.swing.JPanel {

    private final UIHome home;
    private final Map<Item, Stock> mCART;
    private UIPaymentInfo paymentInfo = null;
    private Integer invoiceId = null;

    /**
     * Creates new form UIDashboard
     *
     * @param home
     */
    public UISale(UIHome home) {
        initComponents();
        this.home = home;
        mCART = new HashMap<>();
        txtCode.requestFocus();
        LineDisplay.showMessage("Welcome", "", "DITHSARA TC", "");
//        jTable1.getModel().addTableModelListener(new TableModelListener() {
//
//            @Override
//            public void tableChanged(TableModelEvent e) {
//                for (Map.Entry<Item, Stock> entrySet : mCART.entrySet()) {
//                    Item item = entrySet.getKey();
//                    Stock stock = entrySet.getValue();
//                    if(item.getBarcode().equals(jTable1.getValueAt(e.getLastRow(), 0).toString())){
//                        break;
//                    }
//                }
//            }
//        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        mTotal = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        btnNum7 = new javax.swing.JButton();
        btnNum8 = new javax.swing.JButton();
        btnNum9 = new javax.swing.JButton();
        btnNum4 = new javax.swing.JButton();
        btnNum5 = new javax.swing.JButton();
        btnNum6 = new javax.swing.JButton();
        btnNum3 = new javax.swing.JButton();
        btnNum2 = new javax.swing.JButton();
        btnNum1 = new javax.swing.JButton();
        btnNum0 = new javax.swing.JButton();
        btnCE = new javax.swing.JButton();
        btnUp = new javax.swing.JButton();
        btnNumMin = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnNumPlus = new javax.swing.JButton();
        btnDown = new javax.swing.JButton();
        btnPay = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnDrawer = new javax.swing.JButton();
        mHint = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txtCode = new javax.swing.JTextField();
        btnRead = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        jDesktopPane1.setBackground(java.awt.SystemColor.window);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barcode", "Item", "Price", "Qty", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setEnabled(false);
        jTable1.setFocusable(false);
        jTable1.setRequestFocusEnabled(false);
        jTable1.setRowHeight(30);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(500);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(200);
        }

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setText("Total");

        mTotal.setEditable(false);
        mTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));
        mTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        mTotal.setText("0.00");
        mTotal.setDisabledTextColor(new java.awt.Color(1, 1, 1));
        mTotal.setEnabled(false);
        mTotal.setFocusable(false);
        mTotal.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 699, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        btnNum7.setText("7");
        btnNum7.setFocusable(false);
        btnNum7.setRequestFocusEnabled(false);
        btnNum7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum7ActionPerformed(evt);
            }
        });

        btnNum8.setText("8");
        btnNum8.setFocusable(false);
        btnNum8.setRequestFocusEnabled(false);
        btnNum8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum8ActionPerformed(evt);
            }
        });

        btnNum9.setText("9");
        btnNum9.setFocusable(false);
        btnNum9.setRequestFocusEnabled(false);
        btnNum9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum9ActionPerformed(evt);
            }
        });

        btnNum4.setText("4");
        btnNum4.setFocusable(false);
        btnNum4.setRequestFocusEnabled(false);
        btnNum4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum4ActionPerformed(evt);
            }
        });

        btnNum5.setText("5");
        btnNum5.setFocusable(false);
        btnNum5.setRequestFocusEnabled(false);
        btnNum5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum5ActionPerformed(evt);
            }
        });

        btnNum6.setText("6");
        btnNum6.setFocusable(false);
        btnNum6.setRequestFocusEnabled(false);
        btnNum6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum6ActionPerformed(evt);
            }
        });

        btnNum3.setText("3");
        btnNum3.setFocusable(false);
        btnNum3.setRequestFocusEnabled(false);
        btnNum3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum3ActionPerformed(evt);
            }
        });

        btnNum2.setText("2");
        btnNum2.setFocusable(false);
        btnNum2.setRequestFocusEnabled(false);
        btnNum2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum2ActionPerformed(evt);
            }
        });

        btnNum1.setText("1");
        btnNum1.setFocusable(false);
        btnNum1.setRequestFocusEnabled(false);
        btnNum1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum1ActionPerformed(evt);
            }
        });

        btnNum0.setText("0");
        btnNum0.setFocusable(false);
        btnNum0.setRequestFocusEnabled(false);
        btnNum0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum0ActionPerformed(evt);
            }
        });

        btnCE.setText("⌫");
        btnCE.setFocusable(false);
        btnCE.setRequestFocusEnabled(false);
        btnCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCEActionPerformed(evt);
            }
        });

        btnUp.setText("↑");
        btnUp.setFocusable(false);
        btnUp.setRequestFocusEnabled(false);
        btnUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpActionPerformed(evt);
            }
        });

        btnNumMin.setText("-");
        btnNumMin.setFocusable(false);
        btnNumMin.setRequestFocusEnabled(false);
        btnNumMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumMinActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Webdings", 0, 24)); // NOI18N
        btnSearch.setText("");
        btnSearch.setFocusable(false);
        btnSearch.setRequestFocusEnabled(false);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnNumPlus.setText("+");
        btnNumPlus.setFocusable(false);
        btnNumPlus.setRequestFocusEnabled(false);
        btnNumPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumPlusActionPerformed(evt);
            }
        });

        btnDown.setText("↓");
        btnDown.setFocusable(false);
        btnDown.setRequestFocusEnabled(false);
        btnDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownActionPerformed(evt);
            }
        });

        btnPay.setBackground(new java.awt.Color(16, 134, 29));
        btnPay.setText("Pay");
        btnPay.setEnabled(false);
        btnPay.setFocusable(false);
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        btnPrint.setBackground(new java.awt.Color(255, 0, 22));
        btnPrint.setText("Print Receipt");
        btnPrint.setEnabled(false);
        btnPrint.setFocusable(false);
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.setFocusable(false);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnDrawer.setText("Drawer");
        btnDrawer.setFocusable(false);
        btnDrawer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawerActionPerformed(evt);
            }
        });

        mHint.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        mHint.setForeground(new java.awt.Color(255, 0, 0));
        mHint.setText(" ");

        txtCode.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        txtCode.setFocusCycleRoot(true);
        txtCode.setFocusTraversalPolicyProvider(true);
        txtCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodeActionPerformed(evt);
            }
        });
        txtCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodeKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodeKeyReleased(evt);
            }
        });

        btnRead.setText("||||||");
        btnRead.setFocusable(false);
        btnRead.setRequestFocusEnabled(false);
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnNum7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNum8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNum9, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnNum5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnNum6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnNum3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnNumPlus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCode)
                                    .addComponent(btnNum0, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCE, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnRead, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnNumMin, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDrawer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(mHint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNum7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNum8, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNum9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNum5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNum6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnNum3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnNumPlus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNum0, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCE, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNumMin, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRead, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mHint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDrawer, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Products"));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNum1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum1ActionPerformed
        txtCode.setText(txtCode.getText() + "1");
    }//GEN-LAST:event_btnNum1ActionPerformed

    private void btnNum2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum2ActionPerformed
        txtCode.setText(txtCode.getText() + "2");
    }//GEN-LAST:event_btnNum2ActionPerformed

    private void btnNum3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum3ActionPerformed
        txtCode.setText(txtCode.getText() + "3");
    }//GEN-LAST:event_btnNum3ActionPerformed

    private void btnNum4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum4ActionPerformed
        txtCode.setText(txtCode.getText() + "4");
    }//GEN-LAST:event_btnNum4ActionPerformed

    private void btnNum5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum5ActionPerformed
        txtCode.setText(txtCode.getText() + "5");
    }//GEN-LAST:event_btnNum5ActionPerformed

    private void btnNum6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum6ActionPerformed
        txtCode.setText(txtCode.getText() + "6");
    }//GEN-LAST:event_btnNum6ActionPerformed

    private void btnNum7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum7ActionPerformed
        txtCode.setText(txtCode.getText() + "7");
    }//GEN-LAST:event_btnNum7ActionPerformed

    private void btnNum8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum8ActionPerformed
        txtCode.setText(txtCode.getText() + "8");
    }//GEN-LAST:event_btnNum8ActionPerformed

    private void btnNum9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum9ActionPerformed
        txtCode.setText(txtCode.getText() + "9");
    }//GEN-LAST:event_btnNum9ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        openSearchItems();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownActionPerformed
        Utilities.moveDOWN(jTable1);
    }//GEN-LAST:event_btnDownActionPerformed

    private void btnDrawerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawerActionPerformed
        Utilities.openDrower();
    }//GEN-LAST:event_btnDrawerActionPerformed

    private void btnNumMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumMinActionPerformed
        qtyDown();
    }//GEN-LAST:event_btnNumMinActionPerformed

    private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
        Utilities.moveUP(jTable1);
    }//GEN-LAST:event_btnUpActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        showPayments();
    }//GEN-LAST:event_btnPayActionPerformed

    private void btnCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCEActionPerformed
        txtCode.setText("");
    }//GEN-LAST:event_btnCEActionPerformed

    private void btnNumPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumPlusActionPerformed
        qtyUp();
    }//GEN-LAST:event_btnNumPlusActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        printReceipt();
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        Runtime.getRuntime().gc();
        home.openNewSale();
    }//GEN-LAST:event_btnNewActionPerformed

    private void txtCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodeKeyReleased
//        addProductToCart(evt);
//        if (!Character.isDigit(evt.getKeyChar())) {
//            txtCode.setText("");
//        }
    }//GEN-LAST:event_txtCodeKeyReleased

    private void txtCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodeActionPerformed
        addProductToCart(null);
    }//GEN-LAST:event_txtCodeActionPerformed

    private void txtCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodeKeyPressed
        keyListner(evt);
    }//GEN-LAST:event_txtCodeKeyPressed

    private void txtCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodeKeyTyped

    }//GEN-LAST:event_txtCodeKeyTyped

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        addProductToCart(null);
    }//GEN-LAST:event_btnReadActionPerformed

    private void btnNum0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum0ActionPerformed
       txtCode.setText(txtCode.getText() + "0");
    }//GEN-LAST:event_btnNum0ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCE;
    private javax.swing.JButton btnDown;
    private javax.swing.JButton btnDrawer;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNum0;
    private javax.swing.JButton btnNum1;
    private javax.swing.JButton btnNum2;
    private javax.swing.JButton btnNum3;
    private javax.swing.JButton btnNum4;
    private javax.swing.JButton btnNum5;
    private javax.swing.JButton btnNum6;
    private javax.swing.JButton btnNum7;
    private javax.swing.JButton btnNum8;
    private javax.swing.JButton btnNum9;
    private javax.swing.JButton btnNumMin;
    private javax.swing.JButton btnNumPlus;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUp;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel mHint;
    private javax.swing.JFormattedTextField mTotal;
    private static javax.swing.JTextField txtCode;
    // End of variables declaration//GEN-END:variables

    private void addProductToCart(java.awt.event.KeyEvent evt) {
        String mBarcode = txtCode.getText();
        if (!mBarcode.isEmpty()) {
            Item item = ItemManager.getInstance().getItemByBarcode(mBarcode);
            if (item == null) {
                item = ItemManager.getInstance().getItemByRefcode(mBarcode);
            }
            List<Stock> stocks = ItemManager.getInstance().getStocks(item);
            double lineTotal = 0;
            if (stocks.isEmpty()) {
                mHint.setText(mBarcode + " NO STOCK");
                txtCode.setText("");
                Utilities.tone();
            } else {
                if (mCART.containsKey(item)) {
                    Stock stock = mCART.get(item);
                    stock.setQty(stock.getQty() + 1);
                    lineTotal = stock.getRprice() * stock.getQty();
                } else {
                    Stock stock = stocks.get(0);
                    stock.setQty(1);
                    if (item.getWarranty() == Const.ITEM_WARRANTY) {
                        UIWarranty uiWarranty = new UIWarranty(
                                home,
                                stock.getWarranty() != null ? stock.getWarranty() : new Date(),
                                item,
                                stock);
                        uiWarranty.setVisible(true);
                        if (uiWarranty.getWarranty() != null) {
                            stock.setWarranty(uiWarranty.getWarranty());
                        }
                    }
                    mCART.put(item, stock);
                    lineTotal = stock.getRprice() * stock.getQty();

                }
                txtCode.setText("");
                mHint.setText("");
                LineDisplay.showMessage(
                        "Line : ", String.valueOf(Const.CURRANCY + lineTotal),
                        "Total : ", Const.CURRANCY + refreshCart());
            }
        } else if (mBarcode.length() > 8) {
            txtCode.setText("");
            mHint.setText("");
        }
    }

    private double refreshCart() {
        Utilities.clear(jTable1);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        double total = 0;
        for (Map.Entry<Item, Stock> entrySet : mCART.entrySet()) {
            Item key = entrySet.getKey();
            Stock value = entrySet.getValue();

            Object[] os = new Object[5];
            os[0] = key.getBarcode();
            os[1] = key.getName() + (value.getWarranty() != null ?
                    " warranty due on " + new SimpleDateFormat("dd-MMM-yyyy").format(value.getWarranty()) : "");
            os[2] = value.getRprice();
            os[3] = value.getQty();
            os[4] = value.getRprice() * value.getQty();
            total += value.getRprice() * value.getQty();
            model.addRow(os);
        }
        mTotal.setValue(total);
        if (!mCART.isEmpty()) {
            btnPay.setEnabled(true);
        } else {
            btnPay.setEnabled(false);
            btnPrint.setEnabled(false);
        }
        return total;
    }

    private void showPayments() {
        if (!mCART.isEmpty()) {
            UIPaymentInfo payment = new UIPaymentInfo(home, Double.parseDouble(mTotal.getValue().toString()));
            payment.setVisible(true);
            System.out.println("Payment Status " + payment.getPaymentStatus());
            if (payment.getPaymentStatus() == UIPaymentInfo.PaymentSatus.PAYMENT_COMPLETE) {
                btnPrint.setEnabled(true);
                this.paymentInfo = payment;
            } else {
                this.paymentInfo = null;
            }
        }
    }

    private void qtyUp() {
        try {
            if (jTable1.getSelectedRow() > -1) {
                int i = 0;
                for (Map.Entry<Item, Stock> entrySet : mCART.entrySet()) {
                    Item key = entrySet.getKey();
                    Stock value = entrySet.getValue();
                    if (key.getBarcode().equals(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString())) {
                        value.setQty(value.getQty() + 1);
                        refreshCart();
                        jTable1.setRowSelectionInterval(i, i);
                        break;
                    }
                    i++;
                }
            }
        } catch (Exception e) {
        }
    }

    private void qtyDown() {
        try {
            if (jTable1.getSelectedRow() > -1) {
                int i = 0;
                for (Map.Entry<Item, Stock> entrySet : mCART.entrySet()) {
                    Item key = entrySet.getKey();
                    Stock value = entrySet.getValue();
                    if (key.getBarcode().equals(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString())) {
                        if (value.getQty() > 1) {
                            value.setQty(value.getQty() - 1);
                        } else {
                            mCART.remove(key);
                        }
                        refreshCart();
                        jTable1.setRowSelectionInterval(i, i);
                        break;
                    }
                    i++;
                }
            }
        } catch (Exception e) {
        }
    }

    private void printReceipt() {
        System.err.println("Print Recipt");
        try {
            Invoice invoice = new Invoice();
            invoice.setCreated(new Date());
            invoice.setDate(new Date());
            invoice.setItemQty(mCART.size());
            invoice.setModify(new Date());
            invoice.setStatus(Const.INVOICE_ACTIVE);
            invoice.setValue(Double.valueOf(mTotal.getValue().toString()));
            List<InvoiceDetail> details = new ArrayList<>();
            for (Map.Entry<Item, Stock> entrySet : mCART.entrySet()) {
                Item key = entrySet.getKey();
                Stock value = entrySet.getValue();
                InvoiceDetail detail = new InvoiceDetail();
                detail.setInvoice(invoice);
                detail.setItem(key);
                detail.setQty(value.getQty());
                detail.setStock(value);
                detail.setWarranty(value.getWarranty());
                detail.setUnitPrice(value.getRprice());
                detail.setValue(value.getRprice() * value.getQty());
                details.add(detail);
            }
            List<Receipt> receipts = paymentInfo.getReceipts();
            if (invoiceId == null) {
                invoiceId = SalesManager.getInstance().saveInvoice(invoice, details, receipts);
            }
            DecimalFormat format = new DecimalFormat("#,###.00");
            if (invoiceId != null) {
                Map<String, Object> parms = new HashMap<>();
                parms.put("invoiceNo", "Invoice : " + String.valueOf(invoiceId));
                parms.put("timeStamp", new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss").format(new Date()));
                parms.put("grossAmount", Const.CURRANCY + mTotal.getText());
                parms.put("discount", Const.CURRANCY + format.format(paymentInfo.getDiscounts()));
                parms.put("paid", Const.CURRANCY + format.format(paymentInfo.getPaymentValue()));
                parms.put("balance", Const.CURRANCY + format.format(paymentInfo.getBalanceValue()));
                parms.put("netAmount", Const.CURRANCY
                        + format.format(Double.parseDouble(mTotal.getValue().toString()) - paymentInfo.getDiscounts()));
                User user = home.getUser();
                parms.put("user", user.getFname() + " " + user.getLname());

                List<Map<String, Object>> data = new ArrayList<>();
                for (InvoiceDetail detail : details) {
                    Map<String, Object> map = new HashMap<>();
                    map.put("itemCode", String.valueOf(detail.getItem().getBarcode()));
                    map.put("itemDescription", String.valueOf(detail.getItem().getName()));
                    map.put("itemUnitPrice", Const.CURRANCY + new DecimalFormat("#,###.00").format(detail.getUnitPrice()));
                    map.put("itemQty", String.valueOf(detail.getQty()));
                    if (detail.getWarranty() != null) {
                        map.put("itemWarranty", new SimpleDateFormat("dd-MMM-yyyy").format(detail.getWarranty()));
                    }
                    map.put("itemRetailAmount", Const.CURRANCY + new DecimalFormat("#,###.00").format(detail.getValue()));
                    data.add(map);
                }
                if (ReportManager.getInstance().printReceipt_A6(parms, data.toArray())) {
                    LineDisplay.showMessage("Thank you", "", "for visit us", "");
                } else {
                    JOptionPane.showMessageDialog(this, "Unfortunatly, Cannot issue receipt.",
                            "Warning", JOptionPane.WARNING_MESSAGE);
                }
                Runtime.getRuntime().gc();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    public void changeForcuse() {
        txtCode.requestFocus();
    }

    private void keyListner(KeyEvent evt) {
        if (evt != null) {
            switch (evt.getKeyCode()) {
                case KeyEvent.VK_UP:
                    Utilities.moveUP(jTable1);
                    break;
                case KeyEvent.VK_DOWN:
                    Utilities.moveDOWN(jTable1);
                    break;
                case KeyEvent.VK_ADD:
                    qtyUp();
                    txtCode.setText("");
                    break;
                case '-':
                    qtyDown();
                    txtCode.setText("");
                    break;
                case 109:
                    qtyDown();
                    txtCode.setText("");
                    break;
                case KeyEvent.VK_F10:
                    openSearchItems();
                    break;

                default:;
            }
        }
    }

    private void openSearchItems() {
        UIProductSearch search = new UIProductSearch(home);
        search.setVisible(true);
        Item item = search.getSelectedItem();
        if (item != null) {
            Stock sstock = search.getSelectedStock();
            double lineTotal = 0;
            if (sstock == null) {
                Utilities.tone();
            } else {
                if (mCART.containsKey(item)) {
                    Stock stock = mCART.get(item);
                    stock.setQty(stock.getQty() + 1);
                    lineTotal = stock.getRprice() * stock.getQty();
                } else {
                    sstock.setQty(1);
                    mCART.put(item, sstock);
                    lineTotal = sstock.getRprice() * sstock.getQty();

                }
                txtCode.setText("");
                mHint.setText("");
                LineDisplay.showMessage(
                        "Line : ", String.valueOf(Const.CURRANCY + lineTotal),
                        "Total : ", Const.CURRANCY + refreshCart());
            }
        }
        txtCode.requestFocus();
    }
}
